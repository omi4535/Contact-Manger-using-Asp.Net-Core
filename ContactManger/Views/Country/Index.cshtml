@model IEnumerable<ServiceContract.DTO.Countries.CountryRes>

@{
    ViewData["Title"] = "All Countries";
    var countryCount = Model.Count();
}

<section class="hero">
    <h1 class="title">All Countries 🌍</h1>
    <button id="openModalBtn" class="btn-primary">➕ Add Country</button>
</section>

@if (countryCount == 0)
{
    <div class="card" style="text-align:center;">
        <p style="color:var(--muted); font-style:italic; margin-bottom: 12px;">
            ⚠️ No countries have been added yet.
        </p>
        <button id="openModalBtn2" class="btn-primary">Add Country</button>>
    </div>
}
else
{
    <div class="card">
        <table>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Country Name</th>
                    <th>Country Code</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var country in Model)
                {
                    <tr>
                        <td>@country.id</td>
                        <td>@country.CountryName</td>
                        <td>@country.CountryCode</td>
                        <td style="display:flex; gap:6px;">
                            <a href="/Country/Edit/@country.id" class="btn-primary disabled">Edit</a>
                            <a href="/Country/Delete/@country.id" class="btn-secondary">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<!-- ---------- Add Country Modal ---------- -->
<div id="addCountryModal" class="modal">
    <div class="modal-content">
        <span class="close-btn">&times;</span>
        <h2>Add New Country</h2>
        <form method="post" action="/Country/Add">
            <div class="form-row">
                <div class="field">
                    <label for="CountryName">Country Name</label>
                    <input type="text" id="CountryName" name="CountryName" required />
                </div>
                <div class="field">
                    <label for="CountryCode">Country Code</label>
                    <input type="text" id="CountryCode" name="CountryCode" />
                </div>
            </div>
            <button type="submit" class="btn-primary" style="margin-top:12px;">Add Country</button>
        </form>
    </div>
</div>

<style>
    /* Modal background */
    /* Modal background */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        /* Darker overlay + glass blur */
        background: rgba(0,0,0,0.95);
        backdrop-filter: blur(5px);
    }

    /* Modal content card */
    .modal-content {
        background: var(--card); /* keeps it consistent with dashboard cards */
        margin: 10% auto;
        padding: 24px;
        border-radius: var(--radius);
        width: 400px;
        max-width: 90%;
        box-shadow: 0 8px 24px rgba(0,0,0,0.7);
        border: 1px solid rgba(255,255,255,0.1);
    }

    /* Close button */
    .close-btn {
        float: right;
        font-size: 1.3rem;
        cursor: pointer;
        color: var(--muted);
        font-weight: bold;
        transition: color 0.2s;
    }

        .close-btn:hover {
            color: var(--accent-2);
        }

    /* Modal form inputs */
    .modal-content input {
        width: 100%;
        padding: 10px;
        border-radius: var(--radius);
        border: 1px solid rgba(255,255,255,0.1);
        background: rgba(255,255,255,0.05);
        color: #fff;
        margin-top: 4px;
    }

</style>

<script>
    // Get modal elements
    const modal = document.getElementById("addCountryModal");
    const openBtns = document.querySelectorAll("#openModalBtn, #openModalBtn2");
    const closeBtn = document.querySelector(".close-btn");

    // Open modal on button click
    openBtns.forEach(btn => {
        btn.addEventListener("click", () => {
            modal.style.display = "block";
        });
    });

    // Close modal on click X
    closeBtn.addEventListener("click", () => {
        modal.style.display = "none";
    });

    // Close modal if click outside modal content
    window.addEventListener("click", (e) => {
        if (e.target == modal) {
            modal.style.display = "none";
        }
    });
</script>

<style>
    a.disabled {
        pointer-events: none; /* prevents click */
        opacity: 0.5; /* faded look */
        cursor: not-allowed; /* "disabled" cursor */
        text-decoration: none;
    }
    /* Page Header */
    .page-header {
        margin-bottom: 20px;
    }

        .page-header h1 {
            font-size: 2rem;
            margin-bottom: 5px;
        }

        .page-header .subtitle {
            font-size: 0.95rem;
            color: #636e72;
        }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 50px 20px;
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.05);
    }

        .empty-state p {
            margin-bottom: 20px;
            font-style: italic;
            color: #636e72;
        }

    /* Table Card */
    .table-card {
        background: #fff;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.05);
        overflow-x: auto;
    }

    table.table {
        width: 100%;
        border-collapse: collapse;
    }

        table.table th, table.table td {
            border: 1px solid #dfe6e9;
            padding: 12px 16px;
            text-align: left;
        }

        table.table th {
            background: #2d3436;
            color: #fff;
            font-weight: 600;
        }

        table.table tr:nth-child(even) {
            background: #f5f6fa;
        }

        table.table tr:hover {
            background: #dfe6e9;
            transition: background 0.2s;
        }

    /* Table buttons */
    .btn-primary, .btn-secondary {
        display: inline-block;
        padding: 8px 14px;
        border-radius: var(--radius);
        font-weight: 600;
        text-decoration: none;
        cursor: pointer;
        font-size: 0.85rem;
        transition: background 0.2s, transform 0.2s;
    }

    /* Primary button (Edit / Add) */
    .btn-primary {
        background: linear-gradient(90deg, var(--accent), var(--accent-2));
        color: #05223c; /* matches your theme */
    }

        .btn-primary:hover {
            background: linear-gradient(90deg, var(--accent-2), var(--accent));
            transform: translateY(-2px);
        }

    /* Secondary button (Delete) */
    .btn-secondary {
        background: #e74c3c;
        color: #fff;
    }

        .btn-secondary:hover {
            background: #c0392b;
            transform: translateY(-2px);
        }

    /* Button container in table rows */
    table td .btn-primary,
    table td .btn-secondary {
        padding: 6px 12px;
        font-size: 0.8rem;
    }


</style>
